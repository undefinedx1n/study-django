# Generated by Django 3.2.25 on 2025-05-17 17:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ModelLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('train_time', models.DateTimeField(auto_now_add=True, verbose_name='训练时间')),
                ('model_type', models.CharField(default='KMeans', max_length=100, verbose_name='模型类型')),
                ('parameters', models.JSONField(blank=True, null=True, verbose_name='模型参数')),
                ('performance_metrics', models.JSONField(blank=True, null=True, verbose_name='性能指标')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '模型训练日志',
                'verbose_name_plural': '模型训练日志',
                'ordering': ['-train_time'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='学生的真实姓名', max_length=100, verbose_name='姓名')),
                ('gender', models.CharField(choices=[('male', '男'), ('female', '女'), ('other', '其他'), ('unknown', '未提供')], default='unknown', max_length=10, verbose_name='性别')),
                ('role', models.CharField(choices=[('admin', '管理员'), ('student', '学生')], default='student', max_length=10, verbose_name='角色')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='userprofile', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户资料',
                'verbose_name_plural': '用户资料',
            },
        ),
        migrations.CreateModel(
            name='StudentRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('homework_score', models.FloatField(verbose_name='作业得分')),
                ('training_pass_rate', models.FloatField(verbose_name='实训通过率')),
                ('test_completion_rate', models.FloatField(verbose_name='测验完成率')),
                ('sign_in_score', models.FloatField(verbose_name='签到得分')),
                ('homework_completion_rate', models.FloatField(verbose_name='作业按时完成率')),
                ('video_watch_rate', models.FloatField(verbose_name='视频观看率')),
                ('test_completion_count', models.IntegerField(verbose_name='测验完成次数')),
                ('homework_completion_count', models.IntegerField(verbose_name='作业完成次数')),
                ('course_interaction_score', models.FloatField(verbose_name='课程互动得分')),
                ('learning_style_preference', models.CharField(blank=True, max_length=50, null=True, verbose_name='学习风格偏好')),
                ('time_management_habits', models.CharField(blank=True, max_length=50, null=True, verbose_name='时间管理习惯')),
                ('content_difficulty_perception', models.FloatField(default=50, help_text='0-100, 学生主观感受', verbose_name='内容难度感知')),
                ('interaction_frequency', models.FloatField(default=50, help_text='0-100, 相对值', verbose_name='互动频率')),
                ('feedback_responsiveness', models.FloatField(default=50, help_text='0-100, 相对值', verbose_name='反馈响应度')),
                ('tech_proficiency', models.FloatField(default=50, help_text='0-100, 相对值', verbose_name='技术熟练度')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_records', to=settings.AUTH_USER_MODEL, verbose_name='关联用户')),
            ],
            options={
                'verbose_name': '学生学习记录',
                'verbose_name_plural': '学生学习记录',
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='ClusterResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knowledge_dimension_score', models.FloatField(verbose_name='知识维度得分')),
                ('attitude_dimension_score', models.FloatField(verbose_name='学习态度维度得分')),
                ('interest_dimension_score', models.FloatField(verbose_name='课程兴趣维度得分')),
                ('final_score', models.FloatField(verbose_name='综合得分')),
                ('rating', models.CharField(default='中等', max_length=20, verbose_name='综合评级')),
                ('cluster_id', models.IntegerField(blank=True, help_text='模型分配的簇标签', null=True, verbose_name='簇ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('student_record', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cluster_result', to='profile_app.studentrecord', verbose_name='关联学生记录')),
            ],
            options={
                'verbose_name': '聚类分析结果',
                'verbose_name_plural': '聚类分析结果',
                'ordering': ['-final_score', '-create_time'],
            },
        ),
    ]
